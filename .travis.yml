language: python

matrix:
  include:
    - python: 3.6
      os: linux
      dist: xenial
      
    - python: 3.7
      os: linux
      dist: xenial
    
    # Main build
    - python: 3.8
      os: linux
      dist: xenial
      script:
        - poetry run pylint tilingsgui/
        - poetry run flake8 tilingsgui/
        - poetry run mypy tilingsgui/
        - poetry run pytest
      
    - name: "py3-macOS"
      os: osx
      osx_image: xcode12
      language: shell
      
    - name: "py3-win10"
      os: windows
      language: shell
      before_install:
        - choco install python --version 3.8.0
        - python -m pip install --upgrade pip
        - powershell "(Invoke-WebRequest -Uri https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py -UseBasicParsing).Content | python"
        - poetry config virtualenvs.in-project true
      env: PATH=/c/Python38:/c/Python38/Scripts:$HOME/.poetry/bin:$PATH
      
    - python: pypy3
      os: linux
      dist: xenial
      before_install:
        - pypy3 -mpip install --upgrade pip setuptools wheel
        - |
            if [ "$TRAVIS_PYTHON_VERSION" = "pypy" ]; then
              export PYENV_ROOT="$HOME/.pyenv"
              if [ -f "$PYENV_ROOT/bin/pyenv" ]; then
                pushd "$PYENV_ROOT" && git pull && popd
              else
                rm -rf "$PYENV_ROOT" && git clone --depth 1 https://github.com/yyuu/pyenv.git "$PYENV_ROOT"
              fi
              export PYPY_VERSION="5.6.0"
              "$PYENV_ROOT/bin/pyenv" install --skip-existing "pypy-$PYPY_VERSION"
              virtualenv --python="$PYENV_ROOT/versions/pypy-$PYPY_VERSION/bin/python" "$HOME/virtualenvs/pypy-$PYPY_VERSION"
              source "$HOME/virtualenvs/pypy-$PYPY_VERSION/bin/activate"
            fi
        - curl -fsS -o get-poetry.py https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py
        - python get-poetry.py --preview -y
        - source $HOME/.poetry/env
        # Some of these might depend on typed-ast which is not compatible with pypy
        - sed -i '/^flake8 = /d' pyproject.toml
        - sed -i '/^black = /d' pyproject.toml
        - sed -i '/^pylint = /d' pyproject.toml
        - sed -i '/^mypy = /d' pyproject.toml
        - sed -i '/^isort = /d' pyproject.toml
        - sed -i '/^docutils = /d' pyproject.toml
        - sed -i '/^rstcheck = /d' pyproject.toml
        - poetry update

before_install:
  - curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3
  - source $HOME/.poetry/env
  - poetry config virtualenvs.in-project true

install:
  - poetry install
  
script:
  - poetry run pytest